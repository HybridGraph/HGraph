#!/usr/bin/env bash

# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


# The Hama command script
#
# Environment Variables
#
#   JAVA_HOME        The java implementation to use.  Overrides JAVA_HOME.
#
#   HAMA_CLASSPATH Extra Java CLASSPATH entries.
#
#   HAMA_HEAPSIZE  The maximum amount of heap to use, in MB. 
#                    Default is 1000.
#
#   HAMA_OPTS      Extra Java runtime options.
#   
#   HAMA_NAMENODE_OPTS       These options are added to HAMA_OPTS 
#   HAMA_CLIENT_OPTS         when the respective command is run.
#   HAMA_{COMMAND}_OPTS etc  HAMA_JT_OPTS applies to JobTracker 
#                              for e.g.  HAMA_CLIENT_OPTS applies to 
#                              more than one command (fs, dfs, fsck, 
#                              dfsadmin etc)  
#
#   HAMA_CONF_DIR  Alternate conf dir. Default is ${HAMA_HOME}/conf.
#
#   HAMA_ROOT_LOGGER The root appender. Default is INFO,console
#

bin=`dirname "$0"`
bin=`cd "$bin"; pwd`

. "$bin"/termite-config.sh

cygwin=false
case "`uname`" in
CYGWIN*) cygwin=true;;
esac

# if no args specified, show usage
if [ $# = 0 ]; then
  echo "Usage: termite [--config confdir] COMMAND"
  echo "where COMMAND is one of:"
  echo "  master               run the Master node"
  echo "  worker               run the Worker node"
  echo "  job                  manipulate jobs"
  echo "  jar <jar>            run a jar file"
  echo " or"
  echo "  CLASSNAME            run the class named CLASSNAME"
  echo "Most commands print help when invoked w/o parameters."
  exit 1
fi

# get arguments
COMMAND=$1
shift

if [ -f "${TERMITE_CONF_DIR}/termite-env.sh" ]; then
  . "${TERMITE_CONF_DIR}/termite-env.sh"
fi

# some Java parameters
if [ "$JAVA_HOME" != "" ]; then
  #echo "run java in $JAVA_HOME"
  JAVA_HOME=$JAVA_HOME
fi
  
if [ "$JAVA_HOME" = "" ]; then
  echo "Error: JAVA_HOME is not set."
  exit 1
fi

JAVA=$JAVA_HOME/bin/java
JAVA_HEAP_MAX=-Xmx1000m 

# check envvars which might override default args
if [ "$TERMITE_HEAPSIZE" != "" ]; then
  #echo "run with heapsize $TERMITE_HEAPSIZE"
  JAVA_HEAP_MAX="-Xmx""$TERMITE_HEAPSIZE""m"
  #echo $JAVA_HEAP_MAX
fi

# CLASSPATH initially contains $TERMITE_CONF_DIR
CLASSPATH="${TERMITE_CONF_DIR}"
CLASSPATH=${CLASSPATH}:$JAVA_HOME/lib/tools.jar

# for developers, add Termite classes to CLASSPATH
if [ -d "$TERMITE_HOME/build/classes" ]; then
  CLASSPATH=${CLASSPATH}:$TERMITE_HOME/build/classes
fi
if [ -d "$TERMITE_HOME/build/webapps" ]; then
  CLASSPATH=${CLASSPATH}:$TERMITE_HOME/build
fi
if [ -d "$TERMITE_HOME/build/test/classes" ]; then
  CLASSPATH=${CLASSPATH}:$TERMITE_HOME/build/test/classes
fi

# so that filenames w/ spaces are handled correctly in loops below
IFS=

# for releases, add core termite jar & webapps to CLASSPATH
if [ -d "$TERMITE_HOME/webapps" ]; then
  CLASSPATH=${CLASSPATH}:$TERMITE_HOME
fi
for f in $TERMITE_HOME/termite-core-**.jar; do
  CLASSPATH=${CLASSPATH}:$f;
done

# add libs to CLASSPATH
for f in $TERMITE_HOME/lib/*.jar; do
  CLASSPATH=${CLASSPATH}:$f;
done

for f in $TERMITE_HOME/lib/jsp-2.1/*.jar; do
  CLASSPATH=${CLASSPATH}:$f;
done

# add user-specified CLASSPATH last
if [ "$TERMITE_CLASSPATH" != "" ]; then
  CLASSPATH=${CLASSPATH}:${TERMITE_CLASSPATH}
fi

# default log directory & file
if [ "$TERMITE_LOG_DIR" = "" ]; then
  TERMITE_LOG_DIR="$TERMITE_HOME/logs"
fi
if [ "$TERMITE_LOGFILE" = "" ]; then
  TERMITE_LOGFILE='termite.log'
fi

# default policy file for service-level authorization
if [ "$TERMITE_POLICYFILE" = "" ]; then
  TERMITE_POLICYFILE="termite-policy.xml"
fi

# restore ordinary behaviour
unset IFS

# figure out which class to run
if [ "$COMMAND" = "master" ] ; then
  CLASS='org.apache.hama.BSPMasterRunner'
  BSP_OPTS="$BSP_OPTS $BSP_BSPMASTER_OPTS"
elif [ "$COMMAND" = "worker" ] ; then
  CLASS='org.apache.hama.GroomServerRunner'
  BSP_OPTS="$BSP_OPTS $BSP_GROOMSERVER_OPTS"
elif [ "$COMMAND" = "zookeeper" ] ; then
  CLASS='org.apache.hama.ZooKeeperRunner'
elif [ "$COMMAND" = "job" ] ; then
  CLASS='org.apache.hama.bsp.BSPJobClient'
elif [ "$COMMAND" = "jar" ] ; then
  CLASS=org.apache.hama.util.RunJar
  BSP_OPTS="$BSP_OPTS"
else
  CLASS=$COMMAND
fi

# cygwin path translation
if $cygwin; then
  CLASSPATH=`cygpath -p -w "$CLASSPATH"`
  TERMITE_HOME=`cygpath -w "$TERMITE_HOME"`
  TERMITE_LOG_DIR=`cygpath -w "$TERMITE_LOG_DIR"`
  TOOL_PATH=`cygpath -p -w "$TOOL_PATH"`
fi

# cygwin path translation
if $cygwin; then
  JAVA_LIBRARY_PATH=`cygpath -p "$JAVA_LIBRARY_PATH"`
fi

TERMITE_OPTS="$TERMITE_OPTS -Dtermite.log.dir=$TERMITE_LOG_DIR"
TERMITE_OPTS="$TERMITE_OPTS -Dtermite.log.file=$TERMITE_LOGFILE"
TERMITE_OPTS="$TERMITE_OPTS -Dtermite.home.dir=$TERMITE_HOME"
TERMITE_OPTS="$TERMITE_OPTS -Dtermite.id.str=$TERMITE_IDENT_STRING"
TERMITE_OPTS="$TERMITE_OPTS -Dtermite.root.logger=${TERMITE_ROOT_LOGGER:-INFO,console}"
if [ "x$JAVA_LIBRARY_PATH" != "x" ]; then
  TERMITE_OPTS="$TERMITE_OPTS -Djava.library.path=$JAVA_LIBRARY_PATH"
fi  
TERMITE_OPTS="$TERMITE_OPTS -Dtermite.policy.file=$TERMITE_POLICYFILE"

# run it
exec "$JAVA" $JAVA_HEAP_MAX $TERMITE_OPTS -classpath "$CLASSPATH" $CLASS "$@"
